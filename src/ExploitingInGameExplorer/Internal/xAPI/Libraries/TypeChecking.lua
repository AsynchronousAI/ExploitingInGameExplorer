--// init
local TypeChecking = {}

--// methods
function TypeChecking.type_check(argument_position: number, value: any, allowed_types: {any}, optional: boolean?)
	local formatted_arguments = table.concat(allowed_types, " or ")
	
    if value == nil and not optional and not table.find(allowed_types, "nil") then
		error(("missing argument #%d (expected %s)"):format(argument_position, formatted_arguments), 0)
	elseif value == nil and optional == true then
		return value
    end

    if not (table.find(allowed_types, typeof(value)) or table.find(allowed_types, type(value)) or table.find(allowed_types, value)) and not table.find(allowed_types, "any") then
        error(("invalid argument #%d (expected %s, got %s)"):format(argument_position, formatted_arguments, typeof(value)), 0)
    end

    return value
end

return TypeChecking